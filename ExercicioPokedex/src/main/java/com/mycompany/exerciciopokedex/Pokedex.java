/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.exerciciopokedex;

import javax.swing.DefaultListModel;

/**
 *
 * @author guilh
 */
public class Pokedex extends javax.swing.JFrame {

    /**
     * Creates new form Pokedex
     */
    DefaultListModel<String> computerModel = new DefaultListModel<>();
    DefaultListModel<String> backpackModel = new DefaultListModel<>();

    public Pokedex() {
        initComponents();
        pokedex.setModel(computerModel);
        inventario.setModel(backpackModel);
        Pokemon pk1 = new Pokemon("Pikachu", "Electric", 5);
        computerModel.addElement(pk1.getName() + " " + pk1.getType() + " " + pk1.getLevel());
        Pokemon pk2 = new Pokemon("Bulbasaur", "Grass/Poison", 6);
        computerModel.addElement(pk2.getName() + " " + pk2.getType() + " " + pk2.getLevel());

        Pokemon pk3 = new Pokemon("Charmander", "Fire", 7);
        computerModel.addElement(pk3.getName() + " " + pk3.getType() + " " + pk3.getLevel());

        Pokemon pk4 = new Pokemon("Squirtle", "Water", 8);
        computerModel.addElement(pk4.getName() + " " + pk4.getType() + " " + pk4.getLevel());

        Pokemon pk5 = new Pokemon("Jigglypuff", "Fairy", 4);
        computerModel.addElement(pk5.getName() + " " + pk5.getType() + " " + pk5.getLevel());

        Pokemon pk6 = new Pokemon("Meowth", "Normal", 5);
        computerModel.addElement(pk6.getName() + " " + pk6.getType() + " " + pk6.getLevel());

        Pokemon pk7 = new Pokemon("Pidgey", "Normal/Flying", 3);
        computerModel.addElement(pk7.getName() + " " + pk7.getType() + " " + pk7.getLevel());

        Pokemon pk8 = new Pokemon("Eevee", "Normal", 6);
        computerModel.addElement(pk8.getName() + " " + pk8.getType() + " " + pk8.getLevel());

        Pokemon pk9 = new Pokemon("Geodude", "Rock/Ground", 10);
        computerModel.addElement(pk9.getName() + " " + pk9.getType() + " " + pk9.getLevel());

        Pokemon pk10 = new Pokemon("Machop", "Fighting", 12);
        computerModel.addElement(pk10.getName() + " " + pk10.getType() + " " + pk10.getLevel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pokedex = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        inventario = new javax.swing.JList<>();
        buttonPokedex = new javax.swing.JButton();
        ButtonInve = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pokedex.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {  };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(pokedex);

        inventario.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {  };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(inventario);

        buttonPokedex.setText("Guardar na Pokedex");
        buttonPokedex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPokedexActionPerformed(evt);
            }
        });

        ButtonInve.setText("Guardar no inventario");
        ButtonInve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonInveActionPerformed(evt);
            }
        });

        jLabel1.setText("Inventario");

        jLabel2.setText("Pokedex");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(144, 144, 144))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ButtonInve, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonPokedex, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(236, 236, 236))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(buttonPokedex)
                .addGap(18, 18, 18)
                .addComponent(ButtonInve)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonInveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonInveActionPerformed
        // Pega os Ã­ndices de todos os itens selecionados
        int[] selectedIndices = pokedex.getSelectedIndices();

        // Verifica se algum item foi selecionado
        if (selectedIndices.length > 0 && (backpackModel.getSize() + selectedIndices.length <= 6)) {
            for (int i = selectedIndices.length - 1; i >= 0; i--) {
                int index = selectedIndices[i];
                backpackModel.addElement(computerModel.getElementAt(index));
                computerModel.remove(index);

            }
        }
    }//GEN-LAST:event_ButtonInveActionPerformed

    private void buttonPokedexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPokedexActionPerformed
        // Pega os indices de todos os itens selecionados
        int[] selectedIndices = inventario.getSelectedIndices();

        // Verefica se algum item foi selecionado
        if (selectedIndices.length > 0) {
            for(int i= selectedIndices.length - 1; i >=0;  i--){
                int index = selectedIndices[i];
                computerModel.addElement(backpackModel.getElementAt(index));
                backpackModel.remove(index);
            }
        }
    }//GEN-LAST:event_buttonPokedexActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pokedex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pokedex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonInve;
    private javax.swing.JButton buttonPokedex;
    private javax.swing.JList<String> inventario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> pokedex;
    // End of variables declaration//GEN-END:variables
}
